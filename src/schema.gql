# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @extends on INTERFACE | OBJECT

directive @external on FIELD_DEFINITION | OBJECT

directive @key(fields: String!) on INTERFACE | OBJECT

directive @provides(fields: String!) on FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

type AppList {
  app_name: String!
  id: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Discussion {
  appList: AppList!
  id: Int!
  organization: Organization!
  posts: [Post]!
  row: Int!
  table_name: String!
}

input DiscussionInput {
  app_id: Int!
  org_id: Int!
  row: Int!
  table_name: String!
}

type DiscussionSummary {
  id: Int!
  row: Int!
  table_name: String!
  total_posts: Int!
}

type File {
  file_name: String!
  file_size: Int!
  file_type: String!
  file_url: String!
  id: Int!
}

type Mutation {
  createApp(app_name: String!): AppList!
  createDiscussion(newDiscussionData: DiscussionInput!): Discussion!
  createOrg(name: String!): Organization!
  createPost(files: [Int]!, newPostData: NewPostInput!): Post!
  createReaction(newReactionData: NewReactionInput!): Reaction!
  createUser(email: String!, username: String!): User!
  deleteAttachment(attachmentId: Int!, post_id: Int!): Boolean!
  deleteDiscussion(id: Int!): Boolean!
  deletePost(id: Int!, userId: Int!): Boolean!
  deletePostsByDiscussionId(discussionId: Int!): Boolean!
  deleteReaction(id: Int!, userId: Int!): Boolean!
  updatePost(data: NewPostInput!, id: Int!): Post!
  updateReaction(data: NewReactionInput!, id: Float!, userId: Float!): Reaction!
}

input NewPostInput {
  discussion_id: Int!
  plain_text: String!
  postgres_language: String! = "simple"
  quill_text: String!
  reply_id: Int
  user_id: Int!
}

input NewReactionInput {
  content: String!
  post_id: Int!
  user_id: Int!
}

type Organization {
  id: Int!
  name: String!
}

type Post {
  created_at: DateTime!
  discussion_id: Int!
  files: [RelationshipPostFile]!
  id: Int!
  is_edited: Boolean!
  plain_text: String!
  postgres_language: String!
  quill_text: String!
  reactions: [Reaction]!
  reply: Post
  reply_id: Int
  user: User!
  user_id: Int!
}

type Query {
  discussion(id: Int!): Discussion!
  discussions(app_id: Int!, org_id: Int!, row: Int!, table_name: String!): [Discussion!]!
  getApp(app_name: String!): AppList!
  getDiscussionsSummaryByUserId(userId: Int!): [DiscussionSummary!]!
  getOrg(name: String!): Organization!
  getUserIdFromEmail(email: String!): User!
  getUserIdFromName(name: String!): User!
  post(id: Float!): Post!
  postsByDiscussionId(discussionId: Int!): [Post!]!
  reaction(id: Float!): Reaction!
  reactionsByPostId(postId: Int!): [Reaction!]!
}

type Reaction {
  content: String!
  id: Int!
  post_id: Int!
  user: User!
  user_id: Int!
}

type RelationshipPostFile {
  file: File!
  id: Int!
  post_id: Int!
}

type User {
  active: Boolean!
  created_at: DateTime!
  email: String!
  is_email_verified: Boolean!
  user_id: Int!
  username: String!
}